/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <160>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
  };
        keymap {
                compatible = "zmk,keymap";

                default_layer {

                        bindings = <
                    
&kp ESC &kp Q &kp W &kp E &kp R &kp T &kp U &kp I
&kp O &kp P &mt EXCL QMARK &kp BSPC &kp LSHFT &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp UP &kp DEL &kp LCTRL &kp Y &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp LEFT &kp DOWN &kp RIGHT &mt LC(V) LC(C) &mo 1 &kp SPACE &kp RET &mo 2 &mt DOT COMMA
>;
             };
              
                lower_layer {
                
                        bindings = <
                 
&kp ESC &kp LCTRL &kp LALT &kp C &kp V &kp LC(T) &kp N7 &kp N8 &kp N9 &bt BT_SEL 0 &trans &kp BSPC &rgb_ug RGB_EFF &out OUT_TOG &trans &trans &trans &trans &kp N4 &kp N5 &kp N6 &bt BT_SEL 1 &trans &kp DEL &rgb_ug RGB_TOG &rgb_ug RGB_COLOR_HSB(240,100,3) &rgb_ug RGB_COLOR_HSB(360,100,3) &rgb_ug RGB_COLOR_HSB(123,100,5) &rgb_ug RGB_COLOR_HSB(300,100,5) &rgb_ug RGB_COLOR_HSB(200,0,5) &kp N1 &kp N2 &kp N3 &trans &trans &trans &kp LGUI &trans &kp SPACE &kp RET &kp N0 &mt DOT COMMA
>;
               };
                raise_layer {
                
                        bindings = <
                   
&kp EQUAL &kp AT &kp AMPS &kp HASH &kp GRAVE &kp PRCNT &kp DQT &kp SQT &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &kp BSPC &mt RPAR LPAR &mt GT LT &mt RBKT LBKT &mt RBRC LBRC &kp MINUS &kp PLUS &mt SEMI COLON &kp LC(LS(A)) &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &kp DEL &kp UNDER &kp TILDE &kp PIPE &kp CARET &kp STAR &mt BSLH FSLH &kp DLLR &trans &trans &trans &trans &bt BT_CLR &trans &trans &trans &trans &trans &kp TAB
>; 
                };
               
               adjust_layer {
                
                        bindings = <
                   
           &kp ESC &trans &trans &trans &trans &trans  &trans &trans  &trans &trans &trans &trans
           &trans  &trans &trans &trans &trans &trans  &trans &trans  &trans &trans &trans &trans
           &trans  &trans &trans &trans &trans &trans  &trans &trans  &trans &trans &trans &trans
                                   &trans &trans   &trans   &trans  &trans    &trans
                                    >; 
                   };
            };
      };
};

// -----------------------------------------------------------------------------------------
// color picker for HSB color system http://colorizer.org/
// check your power consumption here https://zmk.dev/power-profiler/
// -----------------------------------------------------------------------------------------

// deemen17: I copied this from Ardakilic 
// https://github.com/Ardakilic/zmk-config/blob/master/config/reviung41.keymap

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMK Yet 
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */


&spi1 {
   compatible = "nordic,nrf-spim";
   status = "okay";

   mosi-pin = <6>;

   // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
   sck-pin = <5>;
   miso-pin = <7>;

   led_strip: ws2812@0 {
      compatible = "worldsemi,ws2812-spi";
      label = "WS2812";

      /* SPI */
      reg = <0>; /* ignored, but necessary for SPI bindings */
      spi-max-frequency = <4000000>;

      /* WS2812 */
      chain-length = <27>; /* arbitrary; change at will */
      spi-one-frame = <0x70>;
      spi-zero-frame = <0x40>;
   };
};

/ {
   chosen {
      zmk,underglow = &led_strip;
   };
};

